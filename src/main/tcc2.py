# -*- coding: utf-8 -*-
"""TCC2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1blTYB9UUuZc2gpigXQy3Z4IQlPHZfqjT

Projeto de Ciências de Dados seguindo a metodolodia do KDD (Knowledge Discovery in Databases) para análise dos dados de rodas de Terapia Comunitária nos convênios com Ministério da Saúde nos anos de 2008, 2009 e 2011.

([KDD e Data Mining: mais do que apenas conceitos](https://itforum.com.br/colunas/kdd-e-data-mining-mais-do-que-apenas-conceitos))

# Etapa 1: Seleção dos Dados

## Lendo o dataset com Pandas

O dataset já está consolidado os dados dos convênios:
* **2008**: Convênio: 2397/2008 Parceria: Ministério da Saúde / FCPC – Fundação
Cearense de Pesquisa e Cultura / MISMEC-CE – Movimento Integrado de Saúde
Mental Comunitária
* **2009**: Convênio: 3363/2009 Parceria: Ministério da Saúde / FCPC – Fundação
Cearense de Pesquisa e Cultura / MISMEC-CE – Movimento Integrado de Saúde
Mental Comunitária
* **2011**: Convênio “Capacitação em Terapia Comunitária Integrativa com ênfase em
contextos de calamidades públicas” (nº 26203/11-74 - TC 101 FNS / UFC). Parceria: Ministério da Saúde / UFC - Universidade Federal do Ceará / FCPC –
Fundação Cearense de Pesquisa e Cultura / MISMEC-CE – Movimento Integrado
de Saúde Mental Comunitária.

Nessa etapa, os dados já foram consolidados na planilha, filtrando os registros com possível duplicidade, ou seja, registros de uma mesma terapia que podem ter sido submetidos por terapeutas de uma mesma equipe.
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Baixando o dataset do GitHub
url= "https://github.com/rafaeld3castro/tcc2/raw/main/src/main/resources/dataset.xlsx"

# Lendo o datase e transformando em um dataframe do pandas
dados = pd.read_excel(url)

"""## Padronizando o nome das colunas do dataset para facilitar a visualização dos dados

O nome dos rótulos originais estão sendo simplicados para facilitar a visuação do dataset, bem como simplicar as leitura das colunas no código. Segue abaixo a legenda para cada rótulo reescrito do dataset:

**Temas propostos (dado booleano - 0 ou 1):**

*   `t_conflitos_fam` = Conflitos Familiares
*   `t_violencia` = Violência
*   `t_conflitos` = Conflitos
*   `t_problemas_esc` = Problemas Escolares
*   `t_drogas` = Drogas
*   `t_alcoolismo` = Alcoolismo
*   `t_tabaco` = Tabaco
*   `t_depressao` = Depressão
*   `t_trabalho` = Trabalho
*   `t_aband_disc_rej` = Abandono, Discriminação, Rejeição
*   `t_problemas_men` = Problemas Mentais e Neurológicos
*   `t_prostituicao` = Prostituição

**Estratégias de enfrentamento (dado booleano - 0 ou 1):**

*   `e_fort_empod` = Fortalecimento / empoderamento pessoal
*   `e_ajuda_rel_esp` = Buscar ajuda religiosa ou espiritual
*   `e_cuid_rel_fam` = Cuidar e se relacionar melhor com a família
*   `e_busca_ajuda_pro` = Buscar ajuda profissional e ações de cidadania (Serviços Públicos)
*   `e_auto_cuidado` = Auto-cuidado - busca de recursos da cultura
*   `e_participar_tc` = Participar de terapia comunitária
*   `e_busca_redes_solid` = Buscar redes solidárias
"""

dados = dados.rename(columns={
    "uf": "data",
    "Data": "data",
    "Horário": "hora",
    "Estresse": "t_estresse",
    "Conflitos Familiares": "t_conflitos_fam",
    "Violência": "t_violencia",
    "Conflitos": "t_conflitos",
    "Problemas Escolares": "t_problemas_esc",
    "Drogas ": "t_drogas",
    "Alcoolismo": "t_alcoolismo",
    "Tabaco": "t_tabaco",
    "Depressão": "t_depressao",
    "Trabalho": "t_trabalho",
    "Abandono, Discriminação, Rejeição": "t_aband_disc_rej",
    "Problemas Mentais e Neurológicos": "t_problemas_men",
    "Prostituição": "t_prostituicao",
    "Outro:": "t_outro",
    "Qual:": "t_outro_qual",
    "Tema Escolhido:": "t_escolhido",
    "Fortalecimento / empoderamento pessoal": "e_fort_empod",
    "Buscar ajuda religiosa ou espiritual ": "e_ajuda_rel_esp",
    "Cuidar e se relacionar melhor com a família ": "e_cuid_rel_fam",
    "Buscar ajuda profissional e ações de cidadania (Serviços Públicos) ": "e_busca_ajuda_pro",
    "Auto-cuidado - busca de recursos da cultura ": "e_auto_cuidado",
    "Participar de terapia comunitária ": "e_participar_tc",
    "Buscar redes solidárias": "e_busca_redes_solid",
    "Outras ": "e_outras",
    "Qual:.1": "e_outras_qual",
    "Unnamed: 37": "depoimentos"
})
dados.info()

"""# Etapa 2: Processamento

## Explorando os dados
"""

dados.head()

dados.describe()

"""## Processamento dos dados de público da terapia

### Processamento para sintizar o quantitativo de cada público
"""

dados['criancas'] = dados["f_criancas"] + dados["m_criancas"]
dados['adolescentes'] = dados["f_adolescentes"] + dados["m_adolescentes"]
dados['adultos'] = dados["f_adultos"] + dados["m_adultos"]
dados['idosos'] = dados["f_idosos"] + dados["m_idosos"]

dados['total_pessoas'] = dados['adolescentes'] + dados['adultos'] + dados['idosos'] + dados['criancas']

"""### Processamento para sintetizar o público por genêro biológico"""

dados['feminino'] = dados['f_adolescentes'] + dados['f_adultos'] + dados['f_idosos'] + dados['f_criancas']
dados['masculino'] = dados['m_adolescentes'] + dados['m_adultos'] + dados['m_idosos'] + dados['m_criancas']

"""### Processamento com total por faixa etária e por genêro biológico"""

dados.loc[:,['idosos','adolescentes','adultos', 'criancas','total_pessoas','feminino','masculino']].head(10)

dados.shape

"""### Histrogramas"""

sns.histplot(dados, x='adolescentes')

sns.histplot(dados, x='adultos')

sns.histplot(dados, x='criancas')

sns.histplot(dados, x='idosos')

"""### Gráficos de Barras"""

total_criancas = dados['criancas'].sum()
total_adolescentes = dados['adolescentes'].sum()
total_adultos = dados['adultos'].sum()
total_idosos = dados['idosos'].sum()

total_feminino = dados['feminino'].sum()
total_masculino = dados['masculino'].sum()

categorias = ['feminino', 'masculino']
totais = [total_feminino, total_masculino]

# Criar o gráfico de barras
plt.bar(categorias, totais)

# Adicionar os valores acima das barras
for i, v in enumerate(totais):
    plt.text(i, v+30, str(v), ha='center')

# Configurar o gráfico
# A época não a classição estava binária, e não incluía os grupos minoritários
plt.xlabel('Sexo Biólogico')
plt.ylabel('Total')
plt.title('Total de pessoas por categoria')

# Exibir o gráfico
plt.show()

categorias = ['criancas', 'adolescentes','adultos','idosos']
totais =  [total_criancas, total_adolescentes,total_adultos,total_idosos]

# Criar o gráfico de barras
plt.bar(categorias, totais)

# Adicionar os valores acima das barras
for i, v in enumerate(totais):
    plt.text(i, v+30, str(v), ha='center')

# Configurar o gráfico
plt.xlabel('Categoria')
plt.ylabel('Total')
plt.title('Total de pessoas por categoria')

# Exibir o gráfico
plt.show()

"""# Etapa 3: Transformação e Mineração dos Dados

# Etapa 4: Análise e criação do modelo
"""